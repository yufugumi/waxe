name: Monthly accessibility scans

on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:
    inputs:
      scan_filter:
        description: "Which scan(s) to run? (all, wellington, letstalk, archives, transportprojects, careers, tutuki)"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - wellington
          - letstalk
          - archives
          - transportprojects
          - careers
          - tutuki

jobs:
  wellington-scan:
    runs-on: blacksmith-8vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'wellington' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache pip packages
        id: pip-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright
        id: playwright-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies (from cache)
        if: steps.pip-cache.outputs.cache-hit == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached dependencies"
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.pip-cache.outputs.cache-hit != 'true' || steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh dependencies"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Generate URLs for wellington.govt.nz
        run: trafilatura --sitemap -u https://wellington.govt.nz/sitemap.xml --list > urls/wellington.txt

      - name: Run wellington.govt.nz axe scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site wellington

      - name: Upload wellington scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wellington-a11y-reports
          path: reports/accessibility-report-wellington-govt-nz-*.html
          retention-days: 30

      - name: Commit changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add urls/ logs/ reports/
          git commit -m "New a11y report for wellington.govt.nz" || echo "No changes to commit"
          git push

  letstalk-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'letstalk' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache pip packages
        id: pip-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright
        id: playwright-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies (from cache)
        if: steps.pip-cache.outputs.cache-hit == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached dependencies"
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.pip-cache.outputs.cache-hit != 'true' || steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh dependencies"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Generate URLs for letstalk.wellington.govt.nz
        run: trafilatura --sitemap -u https://www.letstalk.wellington.govt.nz/sitemap.xml --list > urls/letstalk.txt

      - name: Run letstalk.wellington.govt.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site letstalk

      - name: Upload letstalk scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: letstalk-a11y-reports
          path: reports/accessibility-report-lets-talk-*.html
          retention-days: 30

      - name: Commit letstalk.wellington.govt.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add urls/ logs/ reports/
          git commit -m "New a11y report for letstalk.wellington.govt.nz" || echo "No changes to commit"
          git push

  transportprojects-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'transportprojects' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache pip packages
        id: pip-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright
        id: playwright-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies (from cache)
        if: steps.pip-cache.outputs.cache-hit == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached dependencies"
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.pip-cache.outputs.cache-hit != 'true' || steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh dependencies"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Generate URLs for transportproject.org.nz
        run: trafilatura --sitemap -u https://www.transportprojects.org.nz/sitemap.xml --list > urls/transportprojects.txt

      - name: Run transportprojects.org.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site transportprojects

      - name: Commit transportprojects.org.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add urls/ logs/ reports/
          git commit -m "New a11y report for transportprojects.org.nz" || echo "No changes to commit"
          git push

  archives-online-scan:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'archives' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache pip packages
        id: pip-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright
        id: playwright-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies (from cache)
        if: steps.pip-cache.outputs.cache-hit == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached dependencies"
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.pip-cache.outputs.cache-hit != 'true' || steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh dependencies"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Run archivesonline.wcc.govt.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site archives

      - name: Upload archives scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: archives-a11y-reports
          path: reports/accessibility-report-archives-online-*.html
          retention-days: 30

      - name: Commit archivesonline.wcc.govt.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add urls/ logs/ reports/
          git commit -m "New a11y report for archivesonline.wcc.govt.nz" || echo "No changes to commit"
          git push

  tutuki-scan:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 60
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'tutuki' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: "18"

      - name: Cache npm packages
        id: npm-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache Playwright for Node
        id: playwright-node-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-node-

      - name: Install dependencies (from cache)
        if: steps.npm-cache.outputs.cache-hit == 'true' && steps.playwright-node-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached Node.js dependencies"
          npm install --prefer-offline --no-audit
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.npm-cache.outputs.cache-hit != 'true' || steps.playwright-node-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh Node.js dependencies"
          npm install @playwright/test
          npm install @axe-core/playwright
          npm install csv-writer
          npx playwright install
          npx playwright install-deps

      - name: Run Tutuki accessibility tests
        run: npx playwright test tutuki.spec.ts

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tutuki-accessibility-results
          path: tutuki-accessibility-results/
          retention-days: 30

      - name: Commit Tutuki results
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add tutuki-accessibility-results/
          git commit -m "New a11y report for Tutuki services" || echo "No changes to commit"
          git push

  careers-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'careers' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: "18"

      - name: Cache pip packages
        id: pip-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Playwright
        id: playwright-cache
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies (from cache)
        if: steps.pip-cache.outputs.cache-hit == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached dependencies"
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          npx playwright install --with-deps

      - name: Install dependencies (fresh)
        if: steps.pip-cache.outputs.cache-hit != 'true' || steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing fresh dependencies"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g sitemap-generator-cli
          playwright install
          playwright install-deps

      - name: Generate URLs for careers.wellington.govt.nz
        run: npx sikemap https://careers.wellington.govt.nz --max 400 --output urls/careers.txt

      - name: Run careers.wellington.govt.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site careers

      - name: Upload careers scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: careers-a11y-reports
          path: reports/accessibility-report-careers-*.html
          retention-days: 30

      - name: Commit careers.wellington.govt.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add urls/ logs/ reports/
          git commit -m "New a11y report for careers.wellington.govt.nz" || echo "No changes to commit"
          git push

  create-release:
    runs-on: ubuntu-latest
    # Run after all jobs have completed (regardless of success/failure), only on schedule
    if: ${{ always() && (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.scan_filter == 'all')) }}
    needs:
      [
        wellington-scan,
        letstalk-scan,
        archives-online-scan,
        tutuki-scan,
        transportprojects-scan,
      ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Display artifact structure
        run: find all-artifacts -type f | sort

      - name: Generate tag version
        id: tag_version
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "new_tag=v${DATE}" >> $GITHUB_OUTPUT
          echo "date=${DATE}" >> $GITHUB_OUTPUT

      - name: Prepare release files
        run: |
          # Create release directory
          mkdir -p release-files

          # Find the latest report files for each site
          find all-artifacts -type f -name "*.html" -o -name "*.csv" -o -name "*.json" | while read file; do
            # Copy individual files to the release files directory with a flattened structure
            cp "$file" release-files/
          done

          # List what we're about to release
          echo "Files to be released:"
          ls -la release-files/

      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: "Monthly accessibilty reports"
          body: |
            # Reports - ${{ steps.tag_version.outputs.date }}

            These reports include automated accessibility scan results for:
            - wellington.govt.nz
            - letstalk.wellington.govt.nz
            - Archives online
            - Tutuki services
            - Transport projects
            - careers.wellington.govt.nz
          artifacts: "./release-files/*"
          artifactErrorsFailBuild: true
          allowUpdates: true
