name: Monthly accessibility scans

on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:
    inputs:
      scan_filter:
        description: "Which scan(s) to run? (all, wellington, letstalk, archives, tutuki)"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - wellington
          - letstalk
          - archives
          - tutuki

jobs:
  wellington-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'wellington' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Generate URLs for wellington.govt.nz
        run: trafilatura --sitemap -u https://wellington.govt.nz/sitemap.xml --list > urls/wellington.txt

      - name: Run wellington.govt.nz axe scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site wellington

      - name: Commit changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add *
          git commit -m "New a11y report for wellington.govt.nz" || echo "No changes to commit"
          git push

  letstalk-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'letstalk' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Generate URLs for letstalk.wellington.govt.nz
        run: trafilatura --sitemap -u https://www.letstalk.wellington.govt.nz/sitemap.xml --list > urls/letstalk.txt

      - name: Run letstalk.wellington.govt.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site letstalk

      - name: Commit letstalk.wellington.govt.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add *
          git commit -m "New a11y report for letstalk.wellington.govt.nz" || echo "No changes to commit"
          git push

  archives-online-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 800
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'archives' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Run archivesonline.wcc.govt.nz scan
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 420
          max_attempts: 2
          command: python axe-scanner.py --site archives

      - name: Commit archivesonline.wcc.govt.nz changes
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add *
          git commit -m "New a11y report for archivesonline.wcc.govt.nz" || echo "No changes to commit"
          git push

  tutuki-scan:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 60
    if: ${{ github.event.inputs.scan_filter == 'all' || github.event.inputs.scan_filter == 'tutuki' || github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install @playwright/test
          npm install @axe-core/playwright
          npm install csv-writer
          npx playwright install
          npx playwright install-deps

      - name: Run Tutuki accessibility tests
        run: npx playwright test tutuki.spec.ts

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tutuki-accessibility-results
          path: tutuki-accessibility-results/
          retention-days: 30

      - name: Commit Tutuki results
        run: |
          git pull
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add tutuki-accessibility-results/
          git commit -m "New a11y report for Tutuki services" || echo "No changes to commit"
          git push

  create-release:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    # Run after all jobs have completed (regardless of success/failure), only on schedule
    if: ${{ always() && (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.scan_filter == 'all')) }}
    needs: [wellington-scan, letstalk-scan, archives-online-scan, tutuki-scan]

    steps:
      - uses: actions/checkout@v3

      - name: Generate tag version
        id: tag_version
        run: echo "new_tag=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Monthly accessibility reports
          body: New a11y reports for wellington.govt.nz, letstalk.wellington.govt.nz, and Archives online
          artifacts: "**/*.{csv,html}"
          allowUpdates: true
